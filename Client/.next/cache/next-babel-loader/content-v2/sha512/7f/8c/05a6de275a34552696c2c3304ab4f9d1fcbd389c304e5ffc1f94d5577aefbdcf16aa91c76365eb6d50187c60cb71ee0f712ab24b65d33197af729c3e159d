{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/caesar/Projects/Workout-SaaS/Client/src/Components/Dashboard/Dashboard.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext, useEffect } from 'react';\nimport DashboardBackground from '../../../public/images/DashboardBackground.svg';\nimport WorkingOut from '../../../public/images/WorkingOut.svg';\nimport Subutai from '../../../public/images/subutai.png';\nimport DateContext from '../../Contexts/DateContext';\nimport { DashboardWrapper, DashboardImg, DashboardContainer, GreetingContainer, TimeOfDay, Username, DailyWorkoutContainer, PickADay, PickADayContent, PickADayHeader, PickADayDate } from './Dashboard.elements';\nexport default function DashboardPage() {\n  _s();\n\n  var _useState = useState('Tuesday'),\n      activeDay = _useState[0],\n      setActiveDay = _useState[1];\n\n  var _useContext = useContext(DateContext),\n      date = _useContext.date;\n\n  var time = new Date();\n\n  function Dates(_ref) {\n    var _this = this;\n\n    var activeDay = _ref.activeDay;\n    var daysOfWeek = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n    daysOfWeek.unshift(daysOfWeek.pop());\n\n    while (indexBuffer < 2) {\n      daysOfWeek.unshift(daysOfWeek.pop());\n    }\n\n    var indexBuffer = daysOfWeek.findIndex(function (day) {\n      return day == date.dayOfWeek;\n    });\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: daysOfWeek.map(function (day, index) {\n        return /*#__PURE__*/_jsxDEV(PickADay, {\n          active: activeDay == day,\n          onClick: function onClick() {\n            return setActiveDay(daysOfWeek[index]);\n          },\n          children: /*#__PURE__*/_jsxDEV(PickADayContent, {\n            children: [/*#__PURE__*/_jsxDEV(PickADayHeader, {\n              children: index + parseFloat(date.day) - indexBuffer\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 25\n            }, _this), /*#__PURE__*/_jsxDEV(PickADayDate, {\n              children: day.slice(0, 3)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 25\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 21\n          }, _this)\n        }, day, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 24\n        }, _this);\n      })\n    }, void 0, false);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(DashboardWrapper, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(DashboardImg, {\n      backgroundImg: DashboardBackground\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(DashboardContainer, {\n      children: [/*#__PURE__*/_jsxDEV(GreetingContainer, {\n        children: [/*#__PURE__*/_jsxDEV(TimeOfDay, {\n          children: [\"Good \", date.timeOfDay, \",\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Username, {\n          children: [\"S\\xFCb\\xFCg\\xE4t\\xE4i \", date.year]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(DailyWorkoutContainer, {\n        children: /*#__PURE__*/_jsxDEV(Dates, {\n          activeDay: activeDay\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s(DashboardPage, \"VVZuiqO4X0dL9j00h6hUr0s5dnQ=\");\n\n_c = DashboardPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"DashboardPage\");","map":{"version":3,"sources":["/home/caesar/Projects/Workout-SaaS/Client/src/Components/Dashboard/Dashboard.jsx"],"names":["React","useState","useContext","useEffect","DashboardBackground","WorkingOut","Subutai","DateContext","DashboardWrapper","DashboardImg","DashboardContainer","GreetingContainer","TimeOfDay","Username","DailyWorkoutContainer","PickADay","PickADayContent","PickADayHeader","PickADayDate","DashboardPage","activeDay","setActiveDay","date","time","Date","Dates","daysOfWeek","unshift","pop","indexBuffer","findIndex","day","dayOfWeek","map","index","parseFloat","slice","timeOfDay","year"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect } from 'react'\nimport DashboardBackground from '../../../public/images/DashboardBackground.svg'\nimport WorkingOut from '../../../public/images/WorkingOut.svg'\nimport Subutai from '../../../public/images/subutai.png'\nimport DateContext from '../../Contexts/DateContext'\n\nimport {\n    DashboardWrapper,\n    DashboardImg,\n    DashboardContainer,\n    GreetingContainer,\n    TimeOfDay,\n    Username,\n    DailyWorkoutContainer,\n    PickADay,\n    PickADayContent,\n    PickADayHeader,\n    PickADayDate,\n} from './Dashboard.elements'\n\nexport default function DashboardPage() {\n    const [activeDay, setActiveDay] = useState('Tuesday');\n    const { date } = useContext(DateContext)\n\n    let time = new Date();\n\n    function Dates({ activeDay }) {\n        const daysOfWeek = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n        daysOfWeek.unshift(daysOfWeek.pop());\n\n        while(indexBuffer < 2){\n            daysOfWeek.unshift(daysOfWeek.pop());\n        }\n\n        let indexBuffer = daysOfWeek.findIndex(day => day == date.dayOfWeek)\n\n        return <>\n            {daysOfWeek.map((day, index) => {\n                return <PickADay active={activeDay == day} onClick={() => setActiveDay(daysOfWeek[index])} key={day}>\n                    <PickADayContent>\n                        <PickADayHeader>{index  + parseFloat(date.day) - indexBuffer}</PickADayHeader>\n                        <PickADayDate>{day.slice(0, 3)}</PickADayDate>\n                    </PickADayContent>\n                </PickADay>\n            })}\n        </>\n    }\n\n    return <>\n        <DashboardWrapper />\n        <DashboardImg backgroundImg={DashboardBackground} />\n        <DashboardContainer>\n            <GreetingContainer>\n                <TimeOfDay>Good {date.timeOfDay},</TimeOfDay>\n                <Username>S체b체g채t채i {date.year}</Username>\n            </GreetingContainer>\n            <DailyWorkoutContainer>\n                <Dates activeDay={activeDay} />\n\n                {}\n\n\n\n            </DailyWorkoutContainer>\n        </DashboardContainer>\n    </>\n}"]},"metadata":{},"sourceType":"module"}