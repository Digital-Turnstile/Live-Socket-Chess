{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/home/caesar/Projects/Workout-SaaS/Client/src/Contexts/AuthContext.jsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport useLocalStorageState from 'use-local-storage-state';\nimport AuthService from '../Services/AuthService';\nvar AuthContext = /*#__PURE__*/React.createContext();\nexport var AuthProvider = function AuthProvider(props) {\n  _s();\n\n  var _useLocalStorageState = useLocalStorageState('access_token', ''),\n      _useLocalStorageState2 = _slicedToArray(_useLocalStorageState, 2),\n      token = _useLocalStorageState2[0],\n      setToken = _useLocalStorageState2[1];\n\n  var _useState = useState(null),\n      user = _useState[0],\n      setUser = _useState[1];\n  /*     const [isAuthenticated, setIsAuthenticated] = useState(false);\n   */\n\n\n  var _useState2 = useState(false),\n      isLoaded = _useState2[0],\n      setIsLoaded = _useState2[1];\n  /*     useEffect(()=>{\n          AuthService.authenticate({username: '', plan: 'noob', token: 'urmom'}).then(data => console.log(data))\n      },[]); */\n\n\n  var login = function login(newToken) {\n    setToken(newToken);\n  };\n\n  var logout = function logout() {\n    setToken('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      token: token,\n      login: login,\n      logout: logout,\n      user: user,\n      setUser: setUser\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(AuthProvider, \"68eF6Zs5k2tuhXw2n6ffQ/TAa9g=\", false, function () {\n  return [useLocalStorageState];\n});\n\n_c = AuthProvider;\nexport default AuthContext;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"sources":["/home/caesar/Projects/Workout-SaaS/Client/src/Contexts/AuthContext.jsx"],"names":["React","useState","useEffect","useLocalStorageState","AuthService","AuthContext","createContext","AuthProvider","props","token","setToken","user","setUser","isLoaded","setIsLoaded","login","newToken","logout","children"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,oBAAP,MAAiC,yBAAjC;AACA,OAAOC,WAAP,MAAwB,yBAAxB;AAEA,IAAMC,WAAW,gBAAGL,KAAK,CAACM,aAAN,EAApB;AAEA,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAAAC,KAAK,EAAI;AAAA;;AAAA,8BACPL,oBAAoB,CAAC,cAAD,EAAiB,EAAjB,CADb;AAAA;AAAA,MAC1BM,KAD0B;AAAA,MACnBC,QADmB;;AAAA,kBAETT,QAAQ,CAAC,IAAD,CAFC;AAAA,MAE1BU,IAF0B;AAAA,MAEpBC,OAFoB;AAGrC;AACA;;;AAJqC,mBAIEX,QAAQ,CAAC,KAAD,CAJV;AAAA,MAIvBY,QAJuB;AAAA,MAIbC,WAJa;AAMrC;AACA;AACA;;;AAEI,MAAMC,KAAK,GAAG,SAARA,KAAQ,CAAAC,QAAQ,EAAI;AACtBN,IAAAA,QAAQ,CAACM,QAAD,CAAR;AACH,GAFD;;AAIA,MAAMC,MAAM,GAAG,SAATA,MAAS,GAAM;AACjBP,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACH,GAFD;;AAIA,sBACI,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AACzBD,MAAAA,KAAK,EAALA,KADyB;AAClBM,MAAAA,KAAK,EAALA,KADkB;AACXE,MAAAA,MAAM,EAANA,MADW;AAEzBN,MAAAA,IAAI,EAAJA,IAFyB;AAEnBC,MAAAA,OAAO,EAAPA;AAFmB,KAA7B;AAAA,cAIKJ,KAAK,CAACU;AAJX;AAAA;AAAA;AAAA;AAAA,WADJ;AAQH,CA1BM;;GAAMX,Y;UACiBJ,oB;;;KADjBI,Y;AA4Bb,eAAeF,WAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport useLocalStorageState from 'use-local-storage-state'\nimport AuthService from '../Services/AuthService'\n\nconst AuthContext = React.createContext();\n\nexport const AuthProvider = props => {\n    const [token, setToken] = useLocalStorageState('access_token', '')\n    const [user, setUser] = useState(null);\n/*     const [isAuthenticated, setIsAuthenticated] = useState(false);\n */    const [isLoaded, setIsLoaded] = useState(false);\n\n/*     useEffect(()=>{\n        AuthService.authenticate({username: '', plan: 'noob', token: 'urmom'}).then(data => console.log(data))\n    },[]); */\n\n    const login = newToken => {\n        setToken(newToken)\n    }\n\n    const logout = () => {\n        setToken('')\n    }\n\n    return(\n        <AuthContext.Provider value={{\n            token, login, logout,\n            user, setUser, \n        }}>\n            {props.children}\n        </AuthContext.Provider>\n    )\n}\n\nexport default AuthContext;"]},"metadata":{},"sourceType":"module"}