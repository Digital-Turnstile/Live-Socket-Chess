{"ast":null,"code":"export default {\n  login: function login(user) {\n    if (!user.username) {\n      return;\n    }\n\n    return fetch('http://localhost:5000/api/login', {\n      method: \"post\",\n      body: JSON.stringify(user),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(function (res) {\n      if (res.status !== 401) return res.json().then(function (data) {\n        return data;\n      });else return {\n        isAuthenticated: false,\n        user: {\n          username: \"\",\n          plan: \"\",\n          token: ''\n        }\n      };\n    });\n  },\n  register: function register(user) {\n    console.log(user);\n    return fetch('http://localhost:5000/api/register', {\n      method: \"post\",\n      body: JSON.stringify(user),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(function (res) {\n      return res.json();\n    }).then(function (data) {\n      return data;\n    });\n  },\n  logout: function logout() {\n    return fetch('http://localhost:5000/api/logout').then(function (res) {\n      return res.json();\n    }).then(function (data) {\n      return data;\n    });\n  },\n  authenticate: function authenticate(user) {\n    return fetch('http://localhost:5000/api/authenticated', {\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': 'JWT' + user\n      }\n    }).then(function (res) {\n      if (res.status !== 401) return res.json().then(function (data) {\n        return data;\n      });else return {\n        isAuthenticated: false,\n        user: {\n          username: '',\n          plan: '',\n          token: ''\n        }\n      };\n    });\n  }\n};","map":{"version":3,"sources":["/home/caesar/Projects/Workout-SaaS/Client/src/Services/AuthService.js"],"names":["login","user","username","fetch","method","body","JSON","stringify","headers","then","res","status","json","data","isAuthenticated","plan","token","register","console","log","logout","authenticate"],"mappings":"AAAC,eAAe;AACZA,EAAAA,KAAK,EAAE,eAAAC,IAAI,EAAI;AACX,QAAG,CAACA,IAAI,CAACC,QAAT,EAAkB;AACd;AACH;;AACD,WAAOC,KAAK,CAAC,iCAAD,EAAoC;AAC5CC,MAAAA,MAAM,EAAE,MADoC;AAE5CC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeN,IAAf,CAFsC;AAG5CO,MAAAA,OAAO,EAAE;AACL,wBAAgB;AADX;AAHmC,KAApC,CAAL,CAMJC,IANI,CAMC,UAAAC,GAAG,EAAI;AACX,UAAIA,GAAG,CAACC,MAAJ,KAAe,GAAnB,EACI,OAAOD,GAAG,CAACE,IAAJ,GAAWH,IAAX,CAAgB,UAAAI,IAAI;AAAA,eAAIA,IAAJ;AAAA,OAApB,CAAP,CADJ,KAGI,OAAO;AAAEC,QAAAA,eAAe,EAAE,KAAnB;AAA0Bb,QAAAA,IAAI,EAAE;AAAEC,UAAAA,QAAQ,EAAE,EAAZ;AAAgBa,UAAAA,IAAI,EAAE,EAAtB;AAA0BC,UAAAA,KAAK,EAAE;AAAjC;AAAhC,OAAP;AACP,KAXM,CAAP;AAYH,GAjBW;AAkBZC,EAAAA,QAAQ,EAAE,kBAAAhB,IAAI,EAAI;AACdiB,IAAAA,OAAO,CAACC,GAAR,CAAYlB,IAAZ;AACA,WAAOE,KAAK,CAAC,oCAAD,EAAuC;AAC/CC,MAAAA,MAAM,EAAE,MADuC;AAE/CC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeN,IAAf,CAFyC;AAG/CO,MAAAA,OAAO,EAAE;AACL,wBAAgB;AADX;AAHsC,KAAvC,CAAL,CAMJC,IANI,CAMC,UAAAC,GAAG;AAAA,aAAIA,GAAG,CAACE,IAAJ,EAAJ;AAAA,KANJ,EAOFH,IAPE,CAOG,UAAAI,IAAI;AAAA,aAAIA,IAAJ;AAAA,KAPP,CAAP;AAQH,GA5BW;AA6BZO,EAAAA,MAAM,EAAE,kBAAM;AACV,WAAOjB,KAAK,CAAC,kCAAD,CAAL,CACFM,IADE,CACG,UAAAC,GAAG;AAAA,aAAIA,GAAG,CAACE,IAAJ,EAAJ;AAAA,KADN,EAEFH,IAFE,CAEG,UAAAI,IAAI;AAAA,aAAIA,IAAJ;AAAA,KAFP,CAAP;AAGH,GAjCW;AAkCZQ,EAAAA,YAAY,EAAE,sBAACpB,IAAD,EAAU;AACpB,WAAOE,KAAK,CAAC,yCAAD,EAA4C;AACpDK,MAAAA,OAAO,EAAE;AACL,wBAAgB,kBADX;AAEL,yBAAiB,QAAQP;AAFpB;AAD2C,KAA5C,CAAL,CAMFQ,IANE,CAMG,UAAAC,GAAG,EAAI;AACT,UAAIA,GAAG,CAACC,MAAJ,KAAe,GAAnB,EACI,OAAOD,GAAG,CAACE,IAAJ,GAAWH,IAAX,CAAgB,UAAAI,IAAI;AAAA,eAAIA,IAAJ;AAAA,OAApB,CAAP,CADJ,KAGI,OAAO;AAAEC,QAAAA,eAAe,EAAE,KAAnB;AAA0Bb,QAAAA,IAAI,EAAE;AAAEC,UAAAA,QAAQ,EAAE,EAAZ;AAAgBa,UAAAA,IAAI,EAAE,EAAtB;AAA0BC,UAAAA,KAAK,EAAE;AAAjC;AAAhC,OAAP;AACP,KAXE,CAAP;AAYH;AA/CW,CAAf","sourcesContent":[" export default {\n    login: user => {\n        if(!user.username){\n            return\n        }\n        return fetch('http://localhost:5000/api/login', {\n            method: \"post\",\n            body: JSON.stringify(user),\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }).then(res => {\n            if (res.status !== 401)\n                return res.json().then(data => data);\n            else\n                return { isAuthenticated: false, user: { username: \"\", plan: \"\", token: '' } };\n        })\n    },\n    register: user => {\n        console.log(user);\n        return fetch('http://localhost:5000/api/register', {\n            method: \"post\",\n            body: JSON.stringify(user),\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }).then(res => res.json())\n            .then(data => data);\n    },\n    logout: () => {\n        return fetch('http://localhost:5000/api/logout')\n            .then(res => res.json())\n            .then(data => data);\n    },\n    authenticate: (user) => {\n        return fetch('http://localhost:5000/api/authenticated', {\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': 'JWT' + user\n            }\n        })\n            .then(res => {\n                if (res.status !== 401)\n                    return res.json().then(data => data);\n                else\n                    return { isAuthenticated: false, user: { username: '', plan: '', token: '' } };\n            });\n    }\n\n}"]},"metadata":{},"sourceType":"module"}