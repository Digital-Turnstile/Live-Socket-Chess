{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { Theme } from '../globalStyles';\nvar InputContainer = styled.div.withConfig({\n  displayName: \"Input__InputContainer\",\n  componentId: \"sc-93bttv-0\"\n})([\"display:flex;flex-direction:column;margin:15px 0;position:relative;margin-top:30px;& > input{border:1px solid \", \";border-radius:0.25rem;background-color:transparent;outline:none;padding:15px 3px 15px 15px;font-size:16px;transition:all 0.2s ease;z-index:500;color:#f1f1f1}& > label{color:#757575;position:absolute;top:15px;left:15px;transition:all 0.2s ease;z-index:500;\", \"}\"], Theme.purple, function (props) {\n  return props.focused && \"\\n      color: #f1f1f1;\\n      transform: translateY(-23px) translateX(-5px);\\n      z-index: 501;\\n      background: \".concat(Theme.purple, \";\\n      padding: 0 8px;\\n      border-radius: 2px;\\n    \");\n});\n\nvar Input = function Input(_ref) {\n  var value = _ref.value,\n      type = _ref.type,\n      label = _ref.label,\n      onChange = _ref.onChange,\n      onFocus = _ref.onFocus,\n      onBlur = _ref.onBlur,\n      setRef = _ref.setRef,\n      id = _ref.id,\n      props = _objectWithoutProperties(_ref, [\"value\", \"type\", \"label\", \"onChange\", \"onFocus\", \"onBlur\", \"setRef\", \"id\"]);\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      focused = _React$useState2[0],\n      setFocused = _React$useState2[1];\n\n  var _React$useState3 = React.useState(null),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      error = _React$useState4[0],\n      setError = _React$useState4[1];\n\n  var handleOnFocus = function handleOnFocus() {\n    setFocused(true);\n    onFocus();\n  };\n\n  var handleOnBlur = function handleOnBlur() {\n    setFocused(false);\n    onBlur();\n  };\n\n  var validateValue = function validateValue(val) {\n    if (type === \"email\") {\n      if (val.indexOf(\"@\") === -1) {\n        setError(\"email is invalid\");\n      } else {\n        setError(null);\n      }\n    }\n  };\n\n  var handleOnChange = function handleOnChange(val) {\n    validateValue(val);\n    onChange(val);\n  };\n\n  var renderLabel = function renderLabel() {\n    if (label) {\n      if (error) {\n        return /*#__PURE__*/_jsx(\"label\", {\n          children: error\n        });\n      }\n\n      return /*#__PURE__*/_jsx(\"label\", {\n        children: label\n      });\n    }\n\n    return null;\n  };\n\n  var isFocused = focused || String(value).length || type === \"date\";\n  return /*#__PURE__*/_jsxs(InputContainer, {\n    focused: isFocused,\n    error: error,\n    children: [renderLabel(), /*#__PURE__*/_jsx(\"input\", _objectSpread({\n      value: value,\n      type: type,\n      onChange: function onChange(e) {\n        return handleOnChange(e.target.value);\n      },\n      onFocus: handleOnFocus,\n      onBlur: handleOnBlur,\n      ref: function ref(_ref2) {\n        return setRef(_ref2);\n      },\n      id: id\n    }, props))]\n  });\n};\n\nInput.defaultProps = {\n  type: \"text\",\n  label: \"\",\n  onChange: function onChange(text) {\n    console.error(\"Missing onChange prop: \".concat(text));\n  },\n  onFocus: function onFocus() {},\n  onBlur: function onBlur() {},\n  setRef: function setRef() {}\n};\nexport default Input;","map":null,"metadata":{},"sourceType":"module"}