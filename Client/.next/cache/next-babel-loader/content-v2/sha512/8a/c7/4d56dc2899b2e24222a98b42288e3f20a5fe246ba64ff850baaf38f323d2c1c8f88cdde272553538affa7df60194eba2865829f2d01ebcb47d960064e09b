{"ast":null,"code":"export default {\n  login: user => {\n    if (!user) {\n      return;\n    }\n\n    return fetch('http://192.168.0.109:5000/api/login', {\n      method: \"post\",\n      body: JSON.stringify(user),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(res => {\n      if (res.status !== 401) return res.json().then(data => data);else return {\n        isAuthenticated: false,\n        user: {\n          username: \"\",\n          plan: \"\",\n          token: ''\n        }\n      };\n    });\n  },\n  register: user => {\n    return fetch('http://192.168.0.109:5000/api/register', {\n      method: \"post\",\n      body: JSON.stringify(user),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(res => res.json()).then(data => data);\n  },\n  logout: () => {\n    return fetch('http://192.168.0.109:5000/api/logout').then(res => res.json()).then(data => data);\n  },\n  authenticate: user => {\n    return fetch('http://192.168.0.109:5000/api/authenticated', {\n      method: \"get\",\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + user.token\n      }\n    }).then(res => {\n      if (res.status !== 401) return res.json().then(data => data);else return {\n        isAuthenticated: false,\n        user: {\n          username: '',\n          plan: '',\n          token: ''\n        }\n      };\n    });\n  }\n};","map":{"version":3,"sources":["/home/caesar/Projects/Workout-SaaS/Client/src/Services/AuthService.js"],"names":["login","user","fetch","method","body","JSON","stringify","headers","then","res","status","json","data","isAuthenticated","username","plan","token","register","logout","authenticate"],"mappings":"AAAC,eAAe;AACZA,EAAAA,KAAK,EAAEC,IAAI,IAAI;AACX,QAAG,CAACA,IAAJ,EAAS;AACL;AACH;;AACD,WAAOC,KAAK,CAAC,qCAAD,EAAwC;AAChDC,MAAAA,MAAM,EAAE,MADwC;AAEhDC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeL,IAAf,CAF0C;AAGhDM,MAAAA,OAAO,EAAE;AACL,wBAAgB;AADX;AAHuC,KAAxC,CAAL,CAMJC,IANI,CAMCC,GAAG,IAAI;AACX,UAAIA,GAAG,CAACC,MAAJ,KAAe,GAAnB,EACI,OAAOD,GAAG,CAACE,IAAJ,GAAWH,IAAX,CAAgBI,IAAI,IAAIA,IAAxB,CAAP,CADJ,KAGI,OAAO;AAAEC,QAAAA,eAAe,EAAE,KAAnB;AAA0BZ,QAAAA,IAAI,EAAE;AAAEa,UAAAA,QAAQ,EAAE,EAAZ;AAAgBC,UAAAA,IAAI,EAAE,EAAtB;AAA0BC,UAAAA,KAAK,EAAE;AAAjC;AAAhC,OAAP;AACP,KAXM,CAAP;AAYH,GAjBW;AAkBZC,EAAAA,QAAQ,EAAEhB,IAAI,IAAI;AACd,WAAOC,KAAK,CAAC,wCAAD,EAA2C;AACnDC,MAAAA,MAAM,EAAE,MAD2C;AAEnDC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeL,IAAf,CAF6C;AAGnDM,MAAAA,OAAO,EAAE;AACL,wBAAgB;AADX;AAH0C,KAA3C,CAAL,CAMJC,IANI,CAMCC,GAAG,IAAIA,GAAG,CAACE,IAAJ,EANR,EAOFH,IAPE,CAOGI,IAAI,IAAIA,IAPX,CAAP;AAQH,GA3BW;AA4BZM,EAAAA,MAAM,EAAE,MAAM;AACV,WAAOhB,KAAK,CAAC,sCAAD,CAAL,CACFM,IADE,CACGC,GAAG,IAAIA,GAAG,CAACE,IAAJ,EADV,EAEFH,IAFE,CAEGI,IAAI,IAAIA,IAFX,CAAP;AAGH,GAhCW;AAiCZO,EAAAA,YAAY,EAAGlB,IAAD,IAAU;AACpB,WAAOC,KAAK,CAAC,6CAAD,EAAgD;AACxDC,MAAAA,MAAM,EAAE,KADgD;AAExDI,MAAAA,OAAO,EAAE;AACL,wBAAgB,kBADX;AAEL,yBAAiB,YAAYN,IAAI,CAACe;AAF7B;AAF+C,KAAhD,CAAL,CAMJR,IANI,CAMCC,GAAG,IAAI;AACP,UAAIA,GAAG,CAACC,MAAJ,KAAe,GAAnB,EACI,OAAOD,GAAG,CAACE,IAAJ,GAAWH,IAAX,CAAgBI,IAAI,IAAIA,IAAxB,CAAP,CADJ,KAGI,OAAO;AAAEC,QAAAA,eAAe,EAAE,KAAnB;AAA0BZ,QAAAA,IAAI,EAAE;AAAEa,UAAAA,QAAQ,EAAE,EAAZ;AAAgBC,UAAAA,IAAI,EAAE,EAAtB;AAA0BC,UAAAA,KAAK,EAAE;AAAjC;AAAhC,OAAP;AACP,KAXE,CAAP;AAYH;AA9CW,CAAf","sourcesContent":[" export default {\n    login: user => {\n        if(!user){\n            return\n        }\n        return fetch('http://192.168.0.109:5000/api/login', {\n            method: \"post\",\n            body: JSON.stringify(user),\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }).then(res => {\n            if (res.status !== 401)\n                return res.json().then(data => data);\n            else\n                return { isAuthenticated: false, user: { username: \"\", plan: \"\", token: '' } };\n        })\n    },\n    register: user => {\n        return fetch('http://192.168.0.109:5000/api/register', {\n            method: \"post\",\n            body: JSON.stringify(user),\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }).then(res => res.json())\n            .then(data => data);\n    },\n    logout: () => {\n        return fetch('http://192.168.0.109:5000/api/logout')\n            .then(res => res.json())\n            .then(data => data);\n    },\n    authenticate: (user) => {\n        return fetch('http://192.168.0.109:5000/api/authenticated', {\n            method: \"get\",\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': 'Bearer ' + user.token\n            }\n        }).then(res => {\n                if (res.status !== 401)\n                    return res.json().then(data => data);\n                else\n                    return { isAuthenticated: false, user: { username: '', plan: '', token: '' } };\n            });\n    }\n\n}"]},"metadata":{},"sourceType":"module"}