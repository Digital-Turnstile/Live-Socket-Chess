{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/caesar/Projects/Workout-SaaS/Client/src/Components/Dashboard/Dashboard.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext, useEffect } from 'react';\nimport DashboardBackground from '../../../public/images/DashboardBackground.svg';\nimport WorkingOut from '../../../public/images/WorkingOut.svg';\nimport Subutai from '../../../public/images/subutai.png';\nimport { DashboardWrapper, DashboardImg, DashboardContainer, GreetingContainer, TimeOfDay, Username, DailyWorkoutContainer, PickADay, PickADayContent, PickADayHeader, PickADayDate } from './Dashboard.elements';\nexport default function DashboardPage() {\n  _s();\n\n  var _useState = useState('Sun'),\n      activeDay = _useState[0],\n      setActiveDay = _useState[1];\n\n  function Dates(_ref) {\n    var _this = this;\n\n    var activeDay = _ref.activeDay;\n    var daysOfWeek = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\n    var monthsOfYear = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n    var options = {\n      weekday: 'long',\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric',\n      hour: '2-digit',\n      minute: '2-digit',\n      second: '2-digit',\n      hour12: false\n    };\n    var prnDt = new Date().toLocaleTimeString('en-us', options);\n    var DayOfWeek = prnDt.split(',')[0];\n    console.log(DayOfWeek);\n    var dayIndex = daysOfWeek.find(function (day) {\n      return day == DayOfWeek;\n    });\n    console.log(dayIndex);\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: daysOfWeek.map(function (day, index) {\n        return /*#__PURE__*/_jsxDEV(PickADay, {\n          active: activeDay == day,\n          onClick: function onClick() {\n            return setActiveDay(daysOfWeek[index]);\n          },\n          children: /*#__PURE__*/_jsxDEV(PickADayContent, {\n            children: [/*#__PURE__*/_jsxDEV(PickADayHeader, {\n              children: index + 14\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 25\n            }, _this), /*#__PURE__*/_jsxDEV(PickADayDate, {\n              children: day\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 25\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 21\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 24\n        }, _this);\n      })\n    }, void 0, false);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(DashboardWrapper, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(DashboardImg, {\n      backgroundImg: DashboardBackground\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(DashboardContainer, {\n      children: [/*#__PURE__*/_jsxDEV(GreetingContainer, {\n        children: [/*#__PURE__*/_jsxDEV(TimeOfDay, {\n          children: \"Good Evening, \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Username, {\n          children: \"S\\xFCb\\xFCg\\xE4t\\xE4i\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(DailyWorkoutContainer, {\n        children: /*#__PURE__*/_jsxDEV(Dates, {\n          activeDay: activeDay\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s(DashboardPage, \"iRjPt7/oN/+jqzUHqkUARhBZnmg=\");\n\n_c = DashboardPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"DashboardPage\");","map":{"version":3,"sources":["/home/caesar/Projects/Workout-SaaS/Client/src/Components/Dashboard/Dashboard.jsx"],"names":["React","useState","useContext","useEffect","DashboardBackground","WorkingOut","Subutai","DashboardWrapper","DashboardImg","DashboardContainer","GreetingContainer","TimeOfDay","Username","DailyWorkoutContainer","PickADay","PickADayContent","PickADayHeader","PickADayDate","DashboardPage","activeDay","setActiveDay","Dates","daysOfWeek","monthsOfYear","options","weekday","year","month","day","hour","minute","second","hour12","prnDt","Date","toLocaleTimeString","DayOfWeek","split","console","log","dayIndex","find","map","index"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect } from 'react'\nimport DashboardBackground from '../../../public/images/DashboardBackground.svg'\nimport WorkingOut from '../../../public/images/WorkingOut.svg'\nimport Subutai from '../../../public/images/subutai.png'\n\nimport {\n    DashboardWrapper,\n    DashboardImg,\n    DashboardContainer,\n    GreetingContainer,\n    TimeOfDay,\n    Username,\n    DailyWorkoutContainer,\n    PickADay,\n    PickADayContent,\n    PickADayHeader,\n    PickADayDate,\n} from './Dashboard.elements'\n\nexport default function DashboardPage() {\n    const [activeDay, setActiveDay] = useState('Sun');\n\n\n\n    function Dates({ activeDay }) {\n        const daysOfWeek = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\n        const monthsOfYear = ['January','February','March','April','May','June','July','August','September','October','November','December'];\n\n        const options = {  weekday: 'long', year: 'numeric', month: 'long', day: 'numeric', hour: '2-digit', minute: '2-digit', second: '2-digit', hour12: false };\n        const prnDt = new Date().toLocaleTimeString('en-us', options);\n\n        const DayOfWeek = prnDt.split(',')[0];\n        console.log(DayOfWeek)\n        const dayIndex = daysOfWeek.find(day => day == DayOfWeek);\n\n        console.log(dayIndex)\n\n        return <>\n            {daysOfWeek.map((day, index) => {\n                return <PickADay active={activeDay == day} onClick={() => setActiveDay(daysOfWeek[index])}>\n                    <PickADayContent>\n                        <PickADayHeader>{index + 14}</PickADayHeader>\n                        <PickADayDate>{day}</PickADayDate>\n                    </PickADayContent>\n                </PickADay>\n            })}\n        </>\n    }\n\n    return <>\n        <DashboardWrapper />\n        <DashboardImg backgroundImg={DashboardBackground} />\n        <DashboardContainer>\n            <GreetingContainer>\n                <TimeOfDay>Good Evening, </TimeOfDay>\n                <Username>S체b체g채t채i</Username>\n            </GreetingContainer>\n            <DailyWorkoutContainer>\n                <Dates activeDay={activeDay} />\n            </DailyWorkoutContainer>\n        </DashboardContainer>\n    </>\n}"]},"metadata":{},"sourceType":"module"}