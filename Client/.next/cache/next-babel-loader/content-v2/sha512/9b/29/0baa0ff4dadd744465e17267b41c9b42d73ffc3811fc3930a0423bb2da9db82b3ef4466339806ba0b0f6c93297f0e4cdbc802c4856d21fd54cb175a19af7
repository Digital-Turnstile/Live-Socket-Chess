{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/home/caesar/Projects/Workout-SaaS/Client/src/Contexts/AuthContext.jsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport useLocalStorageState from 'use-local-storage-state';\nimport AuthService from '../Services/AuthService';\nvar AuthContext = /*#__PURE__*/React.createContext();\nexport var AuthProvider = function AuthProvider(props) {\n  _s();\n\n  var _useLocalStorageState = useLocalStorageState('access_token', ''),\n      _useLocalStorageState2 = _slicedToArray(_useLocalStorageState, 2),\n      token = _useLocalStorageState2[0],\n      setToken = _useLocalStorageState2[1];\n\n  var _useState = useState({\n    username: '',\n    plan: '',\n    token: '',\n    email: ''\n  }),\n      user = _useState[0],\n      setUser = _useState[1];\n\n  var _useState2 = useState(false),\n      isAuthenticated = _useState2[0],\n      setIsAuthenticated = _useState2[1];\n\n  var _useState3 = useState(false),\n      isLoaded = _useState3[0],\n      setIsLoaded = _useState3[1];\n\n  useEffect(function () {\n    AuthService.authenticate({\n      username: '',\n      plan: 'noob',\n      token: 'urmom'\n    }).then(function (data) {\n      return setUser(data);\n    });\n  }, []);\n\n  var login = function login(data) {\n    console.log(data);\n  };\n\n  var logout = function logout() {\n    setToken('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user: user\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(AuthProvider, \"OZnWYlRo4GoSfJVHCDrO5ZT6Bks=\", false, function () {\n  return [useLocalStorageState];\n});\n\n_c = AuthProvider;\nexport default AuthContext;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"sources":["/home/caesar/Projects/Workout-SaaS/Client/src/Contexts/AuthContext.jsx"],"names":["React","useState","useEffect","useLocalStorageState","AuthService","AuthContext","createContext","AuthProvider","props","token","setToken","username","plan","email","user","setUser","isAuthenticated","setIsAuthenticated","isLoaded","setIsLoaded","authenticate","then","data","login","console","log","logout","children"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,oBAAP,MAAiC,yBAAjC;AACA,OAAOC,WAAP,MAAwB,yBAAxB;AAEA,IAAMC,WAAW,gBAAGL,KAAK,CAACM,aAAN,EAApB;AAEA,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAAAC,KAAK,EAAI;AAAA;;AAAA,8BACPL,oBAAoB,CAAC,cAAD,EAAiB,EAAjB,CADb;AAAA;AAAA,MAC1BM,KAD0B;AAAA,MACnBC,QADmB;;AAAA,kBAETT,QAAQ,CAAC;AAACU,IAAAA,QAAQ,EAAE,EAAX;AAAeC,IAAAA,IAAI,EAAE,EAArB;AAAyBH,IAAAA,KAAK,EAAE,EAAhC;AAAoCI,IAAAA,KAAK,EAAE;AAA3C,GAAD,CAFC;AAAA,MAE1BC,IAF0B;AAAA,MAEpBC,OAFoB;;AAAA,mBAGad,QAAQ,CAAC,KAAD,CAHrB;AAAA,MAG1Be,eAH0B;AAAA,MAGTC,kBAHS;;AAAA,mBAIEhB,QAAQ,CAAC,KAAD,CAJV;AAAA,MAIvBiB,QAJuB;AAAA,MAIbC,WAJa;;AAMjCjB,EAAAA,SAAS,CAAC,YAAI;AACVE,IAAAA,WAAW,CAACgB,YAAZ,CAAyB;AAACT,MAAAA,QAAQ,EAAE,EAAX;AAAeC,MAAAA,IAAI,EAAE,MAArB;AAA6BH,MAAAA,KAAK,EAAE;AAApC,KAAzB,EAAuEY,IAAvE,CAA4E,UAAAC,IAAI;AAAA,aAAIP,OAAO,CAACO,IAAD,CAAX;AAAA,KAAhF;AACH,GAFQ,EAEP,EAFO,CAAT;;AAIA,MAAMC,KAAK,GAAG,SAARA,KAAQ,CAAAD,IAAI,EAAI;AAClBE,IAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACH,GAFD;;AAIA,MAAMI,MAAM,GAAG,SAATA,MAAS,GAAM;AACjBhB,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACH,GAFD;;AAIA,sBACI,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AACzBI,MAAAA,IAAI,EAAJA;AADyB,KAA7B;AAAA,cAGKN,KAAK,CAACmB;AAHX;AAAA;AAAA;AAAA;AAAA,WADJ;AAOH,CAzBM;;GAAMpB,Y;UACiBJ,oB;;;KADjBI,Y;AA2Bb,eAAeF,WAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport useLocalStorageState from 'use-local-storage-state'\nimport AuthService from '../Services/AuthService'\n\nconst AuthContext = React.createContext();\n\nexport const AuthProvider = props => {\n    const [token, setToken] = useLocalStorageState('access_token', '')\n    const [user, setUser] = useState({username: '', plan: '', token: '', email: ''});\n    const [isAuthenticated, setIsAuthenticated] = useState(false);\n       const [isLoaded, setIsLoaded] = useState(false);\n\n    useEffect(()=>{\n        AuthService.authenticate({username: '', plan: 'noob', token: 'urmom'}).then(data => setUser(data))\n    },[]);\n\n    const login = data => {\n        console.log(data)\n    }\n\n    const logout = () => {\n        setToken('')\n    }\n\n    return(\n        <AuthContext.Provider value={{\n            user\n        }}>\n            {props.children}\n        </AuthContext.Provider>\n    )\n}\n\nexport default AuthContext;"]},"metadata":{},"sourceType":"module"}