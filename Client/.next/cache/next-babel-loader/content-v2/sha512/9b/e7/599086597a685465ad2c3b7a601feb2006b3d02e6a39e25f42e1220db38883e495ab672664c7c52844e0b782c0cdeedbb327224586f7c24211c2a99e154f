{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/home/caesar/Projects/Workout-SaaS/Client/src/Contexts/DateContext.jsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport useLocalStorageState from 'use-local-storage-state';\nvar DateContext = /*#__PURE__*/React.createContext();\nexport var DateProvider = function DateProvider(props) {\n  _s();\n\n  var _useState = useState({\n    day: '',\n    month: '',\n    dayOfWeek: '',\n    firstSunInMonth: '',\n    timeOfDay: '',\n    exactTime: '',\n    year: ''\n  }),\n      date = _useState[0],\n      setDate = _useState[1];\n\n  useEffect(function () {\n    var options = {\n      weekday: 'long',\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric',\n      hour: '2-digit',\n      minute: '2-digit',\n      second: '2-digit',\n      hour12: false\n    };\n    var prnDt = new Date().toLocaleTimeString('en-us', options);\n\n    var _prnDt$replaceAll$spl = prnDt.replaceAll(',', '').split(' '),\n        _prnDt$replaceAll$spl2 = _slicedToArray(_prnDt$replaceAll$spl, 5),\n        dayOfWeek = _prnDt$replaceAll$spl2[0],\n        month = _prnDt$replaceAll$spl2[1],\n        day = _prnDt$replaceAll$spl2[2],\n        year = _prnDt$replaceAll$spl2[3],\n        exactTime = _prnDt$replaceAll$spl2[4];\n\n    if (exactTime) setDate({\n      day: day,\n      month: month,\n      dayOfWeek: dayOfWeek,\n      firstSunInMonth: '',\n      timeOfDay: '',\n      exactTime: exactTime,\n      year: year\n    });\n  }, []);\n  /*   console.log(prnDt)\n    const [ dayOfWeek, month, day, year, time ] = prnDt.split(' ')\n    console.log(day)\n     const dayIndex = daysOfWeek.findIndex(day => day + ',' == dayOfWeek);\n     console.log(dayIndex)\n  */\n\n  return /*#__PURE__*/_jsxDEV(DateContext.Provider, {\n    value: {\n      date: date\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(DateProvider, \"Dv5DNyVYpOvrD7z1Lki6DwNPXjs=\");\n\n_c = DateProvider;\nexport default DateContext;\n\nvar _c;\n\n$RefreshReg$(_c, \"DateProvider\");","map":{"version":3,"sources":["/home/caesar/Projects/Workout-SaaS/Client/src/Contexts/DateContext.jsx"],"names":["React","useState","useEffect","useLocalStorageState","DateContext","createContext","DateProvider","props","day","month","dayOfWeek","firstSunInMonth","timeOfDay","exactTime","year","date","setDate","options","weekday","hour","minute","second","hour12","prnDt","Date","toLocaleTimeString","replaceAll","split","children"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,oBAAP,MAAiC,yBAAjC;AAEA,IAAMC,WAAW,gBAAGJ,KAAK,CAACK,aAAN,EAApB;AAEA,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAAAC,KAAK,EAAI;AAAA;;AAAA,kBACTN,QAAQ,CAAC;AAACO,IAAAA,GAAG,EAAE,EAAN;AAAUC,IAAAA,KAAK,EAAE,EAAjB;AAAqBC,IAAAA,SAAS,EAAE,EAAhC;AAAoCC,IAAAA,eAAe,EAAE,EAArD;AAAyDC,IAAAA,SAAS,EAAE,EAApE;AAAwEC,IAAAA,SAAS,EAAE,EAAnF;AAAuFC,IAAAA,IAAI,EAAE;AAA7F,GAAD,CADC;AAAA,MAC1BC,IAD0B;AAAA,MACpBC,OADoB;;AAGjCd,EAAAA,SAAS,CAAC,YAAI;AACV,QAAMe,OAAO,GAAG;AAAGC,MAAAA,OAAO,EAAE,MAAZ;AAAoBJ,MAAAA,IAAI,EAAE,SAA1B;AAAqCL,MAAAA,KAAK,EAAE,MAA5C;AAAoDD,MAAAA,GAAG,EAAE,SAAzD;AAAoEW,MAAAA,IAAI,EAAE,SAA1E;AAAqFC,MAAAA,MAAM,EAAE,SAA7F;AAAwGC,MAAAA,MAAM,EAAE,SAAhH;AAA2HC,MAAAA,MAAM,EAAE;AAAnI,KAAhB;AACA,QAAMC,KAAK,GAAG,IAAIC,IAAJ,GAAWC,kBAAX,CAA8B,OAA9B,EAAuCR,OAAvC,CAAd;;AAFU,gCAGuCM,KAAK,CAACG,UAAN,CAAiB,GAAjB,EAAsB,EAAtB,EAA0BC,KAA1B,CAAgC,GAAhC,CAHvC;AAAA;AAAA,QAGHjB,SAHG;AAAA,QAGQD,KAHR;AAAA,QAGeD,GAHf;AAAA,QAGoBM,IAHpB;AAAA,QAG0BD,SAH1B;;AAKV,QAAGA,SAAH,EAEAG,OAAO,CAAC;AAACR,MAAAA,GAAG,EAAEA,GAAN;AAAWC,MAAAA,KAAK,EAAEA,KAAlB;AAAyBC,MAAAA,SAAS,EAAEA,SAApC;AAA+CC,MAAAA,eAAe,EAAE,EAAhE;AAAoEC,MAAAA,SAAS,EAAE,EAA/E;AAAmFC,MAAAA,SAAS,EAAEA,SAA9F;AAAyGC,MAAAA,IAAI,EAAEA;AAA/G,KAAD,CAAP;AACH,GARQ,EAQP,EARO,CAAT;AAYF;AACF;AACA;AACA;AACA;AACA;;AAKI,sBACI,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AACzBC,MAAAA,IAAI,EAAJA;AADyB,KAA7B;AAAA,cAGKR,KAAK,CAACqB;AAHX;AAAA;AAAA;AAAA;AAAA,WADJ;AAOH,CAhCM;;GAAMtB,Y;;KAAAA,Y;AAkCb,eAAeF,WAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport useLocalStorageState from 'use-local-storage-state'\n\nconst DateContext = React.createContext();\n\nexport const DateProvider = props => {\n    const [date, setDate] = useState({day: '', month: '', dayOfWeek: '', firstSunInMonth: '', timeOfDay: '', exactTime: '', year: '' });\n\n    useEffect(()=>{\n        const options = {  weekday: 'long', year: 'numeric', month: 'long', day: 'numeric', hour: '2-digit', minute: '2-digit', second: '2-digit', hour12: false };\n        const prnDt = new Date().toLocaleTimeString('en-us', options);\n        const [dayOfWeek, month, day, year, exactTime] = prnDt.replaceAll(',', '').split(' ');\n\n        if(exactTime)        \n\n        setDate({day: day, month: month, dayOfWeek: dayOfWeek, firstSunInMonth: '', timeOfDay: '', exactTime: exactTime, year: year });\n    },[]);\n\n    \n\n  /*   console.log(prnDt)\n    const [ dayOfWeek, month, day, year, time ] = prnDt.split(' ')\n    console.log(day)\n\n    const dayIndex = daysOfWeek.findIndex(day => day + ',' == dayOfWeek);\n\n    console.log(dayIndex)\n\n */\n\n    return(\n        <DateContext.Provider value={{\n            date\n        }}>\n            {props.children}\n        </DateContext.Provider>\n    )\n}\n\nexport default DateContext;"]},"metadata":{},"sourceType":"module"}