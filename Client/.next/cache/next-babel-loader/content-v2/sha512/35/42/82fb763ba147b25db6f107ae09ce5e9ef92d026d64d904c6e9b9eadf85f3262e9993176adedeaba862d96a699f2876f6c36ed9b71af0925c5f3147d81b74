{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport useLocalStorageState from 'use-local-storage-state';\nimport AuthService from '../Services/AuthService';\nvar AuthContext = /*#__PURE__*/React.createContext();\nexport var AuthProvider = function AuthProvider(props) {\n  var _useLocalStorageState = useLocalStorageState('access_token', ''),\n      _useLocalStorageState2 = _slicedToArray(_useLocalStorageState, 2),\n      token = _useLocalStorageState2[0],\n      setToken = _useLocalStorageState2[1];\n\n  var _useLocalStorageState3 = useLocalStorageState('user', {\n    username: '',\n    plan: '',\n    token: ''\n  }),\n      _useLocalStorageState4 = _slicedToArray(_useLocalStorageState3, 2),\n      user = _useLocalStorageState4[0],\n      setUser = _useLocalStorageState4[1];\n\n  var _useState = useState(false),\n      isAuthenticated = _useState[0],\n      setIsAuthenticated = _useState[1];\n\n  var _useState2 = useState(false),\n      isLoaded = _useState2[0],\n      setIsLoaded = _useState2[1];\n\n  useEffect(function () {\n    AuthService.authenticate(user).then(function (data) {\n      return console.log(data);\n    });\n  }, []);\n\n  var login = function login(data) {\n    setUser(data);\n  };\n\n  var logout = function logout() {\n    setToken('');\n  };\n\n  return /*#__PURE__*/_jsx(AuthContext.Provider, {\n    value: {\n      user: user,\n      login: login,\n      logout: logout\n    },\n    children: props.children\n  });\n};\nexport default AuthContext;","map":null,"metadata":{},"sourceType":"module"}