{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/caesar/Projects/Workout-SaaS/Client/src/Contexts/DateContext.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport useLocalStorageState from 'use-local-storage-state';\nconst DateContext = /*#__PURE__*/React.createContext();\nexport const DateProvider = props => {\n  const {\n    0: date,\n    1: setDate\n  } = useState('');\n  useEffect(() => {\n    const options = {\n      weekday: 'long',\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric',\n      hour: '2-digit',\n      minute: '2-digit',\n      second: '2-digit',\n      hour12: false\n    };\n    const prnDt = new Date().toLocaleTimeString('en-us', options);\n    setDate(prnDt);\n  }, []);\n  console.log(prnDt);\n  const [dayOfWeek, month, day, year, time] = prnDt.split(' ');\n  console.log(day);\n  const dayIndex = daysOfWeek.findIndex(day => day + ',' == dayOfWeek);\n  console.log(dayIndex);\n  return /*#__PURE__*/_jsxDEV(DateContext.Provider, {\n    value: {\n      date\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\nexport default DateContext;","map":{"version":3,"sources":["/home/caesar/Projects/Workout-SaaS/Client/src/Contexts/DateContext.jsx"],"names":["React","useState","useEffect","useLocalStorageState","DateContext","createContext","DateProvider","props","date","setDate","options","weekday","year","month","day","hour","minute","second","hour12","prnDt","Date","toLocaleTimeString","console","log","dayOfWeek","time","split","dayIndex","daysOfWeek","findIndex","children"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,oBAAP,MAAiC,yBAAjC;AAEA,MAAMC,WAAW,gBAAGJ,KAAK,CAACK,aAAN,EAApB;AAEA,OAAO,MAAMC,YAAY,GAAGC,KAAK,IAAI;AACjC,QAAM;AAAA,OAACC,IAAD;AAAA,OAAOC;AAAP,MAAkBR,QAAQ,CAAC,EAAD,CAAhC;AAEAC,EAAAA,SAAS,CAAC,MAAI;AACV,UAAMQ,OAAO,GAAG;AAAGC,MAAAA,OAAO,EAAE,MAAZ;AAAoBC,MAAAA,IAAI,EAAE,SAA1B;AAAqCC,MAAAA,KAAK,EAAE,MAA5C;AAAoDC,MAAAA,GAAG,EAAE,SAAzD;AAAoEC,MAAAA,IAAI,EAAE,SAA1E;AAAqFC,MAAAA,MAAM,EAAE,SAA7F;AAAwGC,MAAAA,MAAM,EAAE,SAAhH;AAA2HC,MAAAA,MAAM,EAAE;AAAnI,KAAhB;AACA,UAAMC,KAAK,GAAG,IAAIC,IAAJ,GAAWC,kBAAX,CAA8B,OAA9B,EAAuCX,OAAvC,CAAd;AACAD,IAAAA,OAAO,CAACU,KAAD,CAAP;AACH,GAJQ,EAIP,EAJO,CAAT;AAQAG,EAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAZ;AACA,QAAM,CAAEK,SAAF,EAAaX,KAAb,EAAoBC,GAApB,EAAyBF,IAAzB,EAA+Ba,IAA/B,IAAwCN,KAAK,CAACO,KAAN,CAAY,GAAZ,CAA9C;AACAJ,EAAAA,OAAO,CAACC,GAAR,CAAYT,GAAZ;AAEA,QAAMa,QAAQ,GAAGC,UAAU,CAACC,SAAX,CAAqBf,GAAG,IAAIA,GAAG,GAAG,GAAN,IAAaU,SAAzC,CAAjB;AAEAF,EAAAA,OAAO,CAACC,GAAR,CAAYI,QAAZ;AAIA,sBACI,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AACzBnB,MAAAA;AADyB,KAA7B;AAAA,cAGKD,KAAK,CAACuB;AAHX;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH,CA5BM;AA8BP,eAAe1B,WAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport useLocalStorageState from 'use-local-storage-state'\n\nconst DateContext = React.createContext();\n\nexport const DateProvider = props => {\n    const [date, setDate] = useState('');\n\n    useEffect(()=>{\n        const options = {  weekday: 'long', year: 'numeric', month: 'long', day: 'numeric', hour: '2-digit', minute: '2-digit', second: '2-digit', hour12: false };\n        const prnDt = new Date().toLocaleTimeString('en-us', options);\n        setDate(prnDt);\n    },[]);\n\n    \n\n    console.log(prnDt)\n    const [ dayOfWeek, month, day, year, time ] = prnDt.split(' ')\n    console.log(day)\n\n    const dayIndex = daysOfWeek.findIndex(day => day + ',' == dayOfWeek);\n\n    console.log(dayIndex)\n\n\n\n    return(\n        <DateContext.Provider value={{\n            date\n        }}>\n            {props.children}\n        </DateContext.Provider>\n    )\n}\n\nexport default DateContext;"]},"metadata":{},"sourceType":"module"}