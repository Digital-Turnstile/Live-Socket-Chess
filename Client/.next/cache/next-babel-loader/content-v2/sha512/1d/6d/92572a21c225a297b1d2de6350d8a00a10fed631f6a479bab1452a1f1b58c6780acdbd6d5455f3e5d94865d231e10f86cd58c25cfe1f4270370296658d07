{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/caesar/Projects/Workout-SaaS/Client/src/Components/Dashboard/Dashboard.jsx\";\nimport React, { useState, useContext, useEffect } from 'react';\nimport DashboardBackground from '../../../public/images/DashboardBackground.svg';\nimport WorkingOut from '../../../public/images/WorkingOut.svg';\nimport Subutai from '../../../public/images/subutai.png';\nimport DateContext from '../../Contexts/DateContext';\nimport { DashboardWrapper, DashboardImg, DashboardContainer, GreetingContainer, TimeOfDay, Username, DailyWorkoutContainer, PickADay, PickADayContent, PickADayHeader, PickADayDate } from './Dashboard.elements';\nexport default function DashboardPage() {\n  const {\n    0: activeDay,\n    1: setActiveDay\n  } = useState('Tuesday');\n  const {\n    date\n  } = useContext(DateContext);\n\n  function Dates({\n    activeDay\n  }) {\n    const daysOfWeek = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n    let indexBuffer = daysOfWeek.findIndex(day => day == date.dayOfWeek);\n\n    while (indexBuffer < 2) {\n      daysOfWeek.unshift(daysOfWeek.pop());\n      indexBuffer++;\n    }\n\n    while (indexBuffer > 2) {\n      daysOfWeek.push(daysOfWeek.shift());\n      indexBuffer--;\n    }\n\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: daysOfWeek.map((day, index) => {\n        return /*#__PURE__*/_jsxDEV(PickADay, {\n          active: activeDay == day,\n          onClick: () => setActiveDay(daysOfWeek[index]),\n          children: /*#__PURE__*/_jsxDEV(PickADayContent, {\n            children: [/*#__PURE__*/_jsxDEV(PickADayHeader, {\n              children: index + parseFloat(date.day) - indexBuffer\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(PickADayDate, {\n              children: day.slice(0, 3)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 21\n          }, this)\n        }, day, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 24\n        }, this);\n      })\n    }, void 0, false);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(DashboardWrapper, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(DashboardImg, {\n      backgroundImg: DashboardBackground\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(DashboardContainer, {\n      children: [/*#__PURE__*/_jsxDEV(GreetingContainer, {\n        children: [/*#__PURE__*/_jsxDEV(TimeOfDay, {\n          children: [\"Good \", date.timeOfDay, \",\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Username, {\n          children: [\"S\\xFCb\\xFCg\\xE4t\\xE4i \", date.year]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(DailyWorkoutContainer, {\n        children: /*#__PURE__*/_jsxDEV(Dates, {\n          activeDay: activeDay\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}","map":{"version":3,"sources":["/home/caesar/Projects/Workout-SaaS/Client/src/Components/Dashboard/Dashboard.jsx"],"names":["React","useState","useContext","useEffect","DashboardBackground","WorkingOut","Subutai","DateContext","DashboardWrapper","DashboardImg","DashboardContainer","GreetingContainer","TimeOfDay","Username","DailyWorkoutContainer","PickADay","PickADayContent","PickADayHeader","PickADayDate","DashboardPage","activeDay","setActiveDay","date","Dates","daysOfWeek","indexBuffer","findIndex","day","dayOfWeek","unshift","pop","push","shift","map","index","parseFloat","slice","timeOfDay","year"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect } from 'react'\nimport DashboardBackground from '../../../public/images/DashboardBackground.svg'\nimport WorkingOut from '../../../public/images/WorkingOut.svg'\nimport Subutai from '../../../public/images/subutai.png'\nimport DateContext from '../../Contexts/DateContext'\n\nimport {\n    DashboardWrapper,\n    DashboardImg,\n    DashboardContainer,\n    GreetingContainer,\n    TimeOfDay,\n    Username,\n    DailyWorkoutContainer,\n    PickADay,\n    PickADayContent,\n    PickADayHeader,\n    PickADayDate,\n} from './Dashboard.elements'\n\nexport default function DashboardPage() {\n    const [activeDay, setActiveDay] = useState('Tuesday');\n    const { date } = useContext(DateContext)\n\n    function Dates({ activeDay }) {\n        const daysOfWeek = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n\n        let indexBuffer = daysOfWeek.findIndex(day => day == date.dayOfWeek)\n \n        while(indexBuffer < 2){\n            daysOfWeek.unshift(daysOfWeek.pop());\n            indexBuffer++;\n        }\n\n        while(indexBuffer > 2){\n            daysOfWeek.push(daysOfWeek.shift());\n            indexBuffer--;\n        } \n\n        return <>\n            {daysOfWeek.map((day, index) => {\n                return <PickADay active={activeDay == day} onClick={() => setActiveDay(daysOfWeek[index])} key={day}>\n                    <PickADayContent>\n                        <PickADayHeader>{index  + parseFloat(date.day) - indexBuffer}</PickADayHeader>\n                        <PickADayDate>{day.slice(0, 3)}</PickADayDate>\n                    </PickADayContent>\n                </PickADay>\n            })}\n        </>\n    }\n\n    return <>\n        <DashboardWrapper />\n        <DashboardImg backgroundImg={DashboardBackground} />\n        <DashboardContainer>\n            <GreetingContainer>\n                <TimeOfDay>Good {date.timeOfDay},</TimeOfDay>\n                <Username>S체b체g채t채i {date.year}</Username>\n            </GreetingContainer>\n            <DailyWorkoutContainer>\n                <Dates activeDay={activeDay} />\n\n                {}\n\n\n\n            </DailyWorkoutContainer>\n        </DashboardContainer>\n    </>\n}"]},"metadata":{},"sourceType":"module"}